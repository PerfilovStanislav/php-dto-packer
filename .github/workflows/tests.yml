name: Tests & Code Quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2, 8.3, 8.4]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, json, xdebug
          coverage: xdebug

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ matrix.php }}-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Update PHP-CS-Fixer
        run: composer update friendsofphp/php-cs-fixer --with-all-dependencies --no-interaction

      - name: Check PHP-CS-Fixer version
        run: vendor/bin/php-cs-fixer --version

      - name: Install dependencies
        run: composer install --no-progress --no-interaction --prefer-dist

      - name: Cache PHP-CS-Fixer
        uses: actions/cache@v4
        with:
          path: .php-cs-fixer.cache
          key: php-cs-fixer-${{ hashFiles('composer.lock') }}
          restore-keys: php-cs-fixer-

      - name: Run PHP-CS-Fixer
        if: github.event_name == 'push'
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --ansi --parallel

      - name: Run PHP-CS-Fixer on changed files (PR)
        if: github.event_name == 'pull_request'
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.base_ref }}...${{ github.sha }} -- '*.php')
          if [ -n "$CHANGED_FILES" ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff --ansi --parallel $CHANGED_FILES
          else
            echo "No PHP files changed."
          fi

      - name: Run Tests with Coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --testdox --colors=always

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
